<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CsV/fOQ2VQjxq3cAAAAASUVORK5CYII=
</value>
  </data>
</root>